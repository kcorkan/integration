{
  "name": "eventCommit_fommt",
  "entity": "ac_action",
  "isActive": true,
  "ruleType": "commitEvent",
  "asynchronous": false,
  "appliesTo": {
    "insert": true,
    "update": true,
    "delete": false
  },
  "codeType": "JavaScript",
  "isAutoTitle": false,
  "title": "Event (Commit): Update Agile Central",
  "comments": "This rule fires when a record is inserted or updated in the ac_action table.  This rule will take whatever action is requested and execute it in Agile Central.  \n\nThe following occurs in this function: \n1.  Gets data from the acObject table based on the ac_object_ident for the current row. \n2.  Validates that there are fields.  If there are no fields or data, then we don't do anything in Agile Central. \n3.  If an object_uuid does not exist in the ac_object data, then we assume we are creating a new object in Agile Central.  \n4.  Get the auth headers.  Typically this will return the auth headers with an API key, but in instances where an API key isn't available (e.g. On-Prem, Sandbox), it will return a security token that needs to be passed into the url, not into the headers.  \n5.  Transform the acObject payload to a payload that can be sent to Agile Central.  This uses the \"transformSpec\" resource. \n6.  Update or Create the object. \n7.  If the object is created, then set the ac_object.object_uuid field to the new Object_uuid.  This will be propagated back to the calling reaction from the Orchestrator API so that it can be added to the xref table.",
  "topics": [
    "to Agile Central"
  ]
}
